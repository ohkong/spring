<?xml version="1.0" encoding="UTF-8"?>
<!-- /src/main/java/aop2.xml -->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop.xsd">
	
	<bean id="loggingAdvice" class="xml.LoggingAdvice"/>
	<bean id="cacheAdvice" class="xml.ArticleCacheAdvice"/>
	<bean id="traceAdvice" class="xml.UpdateMemberInfoTraceAdvice"/>
	
	<aop:config>
		<!-- pointcut="args(id,info)" : 메서드의 매개변수가 String, UpdateInfo인 메서드 -->
		<aop:aspect id="traceAspect" ref="traceAdvice" order="1">
			<aop:after-returning method="traceReturn"
				pointcut="args(id,info)" returning="ret"
				arg-names="ret,id,info"/>
		</aop:aspect>
		<aop:aspect id="cacheAspect" ref="cacheAdvice" order="2">
			<aop:around method="cache" 
				pointcut="execution(public * *..ReadArticleService.*(..))"/>
		</aop:aspect>
		<aop:aspect id="loggingAspect" ref="loggingAdvice" order="3">
			<aop:pointcut expression="execution(public * xml..*(..))"
				 id="publicMethod"/>
			<!-- ADVICE 설정 -->
			<aop:before method="before" pointcut-ref="publicMethod"/>
			<!-- returning : 핵심알고리즘의 리턴값 -->
			<aop:after-returning method="afterReturning"
				pointcut-ref="publicMethod" returning="ret"/>
			<!-- ex : 예외객체 -->
			<aop:after-throwing method="afterThrowing" pointcut-ref="publicMethod"
				throwing="ex"/>
			<aop:after method="afterFinally" pointcut-ref="publicMethod"/>
		</aop:aspect>
	</aop:config>
		
</beans>